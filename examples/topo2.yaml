apiVersion: lcnc.yndd.io/v1
kind: ControllerConfig
metadata:
  name: topoController
  namespace: default
spec:
  properties:
    for: 
      topo: 
        gvr: 
          apiVersion: topo.yndd.io/v1alpha1
          resource: definitions
        pipelineRef: forPipeline
    pipelines:
      - name: forPipeline
        vars:
          targets:
            type: query
            input:
              gvr: 
                apiVersion: target.yndd.io/v1
                resources: targets 
          alltemplates:
            type: query
            input: 
              gvr: 
                apiVersion: topo.yndd.io/v1alpha1
                resource: templates
          parentTemplateNames:
            range:
              value: $topo.spec.properties.templates
            type: slice # output is name of the function
            input: 
              value: $VALUE.name
          parentTemplates:
            range:
              value: $parentTemplateNames
            type: map # output is name of the function
            input: 
              key: $VALUE
              value: .select($.allTemplates.name == $VALUE)
          childTemplates:
            range: 
              value: $parentTemplates
            type: map
            input:
              key: $VALUE.metadata.name
              value: $allTemplates == "$VALUE.spec.properties.fabric.pod[*].definitionRef
          discoveryRuleNames:
            range:
              value: $topo.spec.properties.discoveryRules
            type: slice
            input:
              value: $VALUE.metatdata.name
        tasks:
          createTopology:
            image: topology
            input:
              topology: $topo # can be implicit
            output: 
              topologies: 
                gvr: 
                  apiVersion: topo.yndd.io/v1alpha1
                  resource: topologies
                resource: topologies
          createFabric:
            range:
              value: ${topo.getParentTemplates.parentTemplates}
            image: topologyBuilderFromTemplate
            vars:
              localChildTemplates:
                range:
                  value: $childTemplates
                  condition:
                    expression: xxx
                type: slice
                input: 
                  value: $KEY 
            input:
              parentTemplate: $VALUE
              localChildTemplates: $localChildTemplates
            output: 
              nodes: 
                gvr:
                  apiVersion: topo.yndd.io/v1alpha1
                  resource: nodes  
              links: 
                gvr:
                  apiVersion: topo.yndd.io/v1alpha1
                  resource: links
          createNodeFromDiscovery:
            range: 
              value: ${topo.getDiscoveryRuleNames.discoveryRuleNames)
            image: nodeBuilderFromDiscoveryRule
            input:
              targets: .select(${topo.targets}.metadata.name == $VALUE)
            output: 
              nodes: 
                apiVersion: topo.yndd.io/v1alpha1
                resources: nodes 
          
